# Assignment 2
#
# "Serial and compiler optimizations for the Gaussian Filter"
#
#  This assignment is due on Friday, September 13 2013 at 9:00 AM
#
#  This assignment is distributed with several components
#    
#  1) GaussFilter.c - an implementation of the Gaussian filter written in C
#  2) GaussFilter.cpp - an implementation of the Gaussian filter written in C++
#  3) GaussFilter.F90 - an implementation of the Gaussian filter written in fortran
#  4) Makefile - a makefile which builds executables from these codes
#     	       - to build all the codes type 'make' at the command line
#              - if you haven't used makefiles before type 'man make' to get information
#   5) Tetons.dat - a noisy image that I created, which each code relies upon 
#                   and reads automatically
#
# 
#  The output from the codes is Tetons-Smooth.dat
#  
# 
# The objective of this assignment is to optimize one of these codes using
# compiler opimization and editing the source code. 
#
# Specific components of this assignment are as follows:
#
# 1)	Edit the source code to report the estimated memory bandwidth (in MB/s) and the 
# 	performance (in GFLOP/s) that is achieved during execution of the code
# 
# 2)	Using the GNU compiler (gcc/g++/gfortran), choose two specific 
# 	compiler optimizations (NOT -O, -O2, -O3) that you think will 
#	speed up the execution of the code. Measure the resulting performance and 
#	compare to the standard -O optimizations. Document your choices by adding 
#	a new executable in the makefile that is built with your selection of 
#	optimization flags.
#
#	Note: to load the GNU compilers, use:
#	   module purge
#	   module load gcc
# 		
# 3)	For either the .c or .F90 versions, enable automatic vectorization using the intel
# 	compiler with '-O2' optimizations.  Compare the performance to an un-vectorized version
#	compiled using '-O2 -no-vec'. Update the makefile to build each executable. 
#
# 4)	Manually optimize the Gaussian filter code to improve the performance. Save your
# 	optimized code with a different name than the original (ie. GaussFilter-opt.c)
#
#
# NOTE: Make sure that I will be able to reproduce your results easily! 
# 	Your submission of the assignment should contain:
#
#		- An updated version of ONE of the source files
#		- An edited makefile that will build all of your executables
#		  by typing 'make all'
#		- Any job submission scripts used to run your jobs
#		  and output files showing your performance measurements
#


